// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebFirstApplication.objects;

namespace WebFirstApplication.Migrations
{
    [DbContext(typeof(LearningAssistantDbContext))]
    partial class LearningAssistantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("WebFirstApplication.Objects.StudentCourses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("StudentGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseGuid");

                    b.HasIndex("StudentGuid");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("WebFirstApplication.Objects.UploadedDocuments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContetntType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UploadedDocuments");
                });

            modelBuilder.Entity("WebFirstApplication.Objects.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentGuid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebFirstApplication.objects.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CoruseDate")
                        .HasColumnType("date");

                    b.Property<string>("CoruseTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0378a0d3-6052-4baa-a869-c5aaf39b5cd6"),
                            CoruseDate = new DateTime(2021, 1, 2, 17, 20, 46, 896, DateTimeKind.Local).AddTicks(6685),
                            CoruseTime = "12:00",
                            CourseCode = "EN",
                            CourseName = "English",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2de66195-d303-4015-b2ca-b0b7120a3572"),
                            CoruseDate = new DateTime(2021, 1, 2, 17, 20, 46, 901, DateTimeKind.Local).AddTicks(2312),
                            CoruseTime = "9:00",
                            CourseCode = "FN",
                            CourseName = "French",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("10a22095-ca6e-4fe9-87ad-1027cd3c68ea"),
                            CoruseDate = new DateTime(2021, 1, 2, 17, 20, 46, 901, DateTimeKind.Local).AddTicks(2397),
                            CoruseTime = "10:00",
                            CourseCode = "MATH",
                            CourseName = "Mathematic",
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebFirstApplication.objects.DailyNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContetntType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("StudentCoursesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UploadDocumentGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentCoursesId");

                    b.HasIndex("UploadDocumentGuid");

                    b.ToTable("DailyNotes");
                });

            modelBuilder.Entity("WebFirstApplication.objects.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebFirstApplication.Objects.StudentCourses", b =>
                {
                    b.HasOne("WebFirstApplication.objects.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebFirstApplication.objects.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebFirstApplication.Objects.User", b =>
                {
                    b.HasOne("WebFirstApplication.objects.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebFirstApplication.objects.DailyNote", b =>
                {
                    b.HasOne("WebFirstApplication.Objects.StudentCourses", "StudentCourses")
                        .WithMany("DailyNotes")
                        .HasForeignKey("StudentCoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebFirstApplication.Objects.UploadedDocuments", "Documents")
                        .WithMany()
                        .HasForeignKey("UploadDocumentGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documents");

                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("WebFirstApplication.Objects.StudentCourses", b =>
                {
                    b.Navigation("DailyNotes");
                });
#pragma warning restore 612, 618
        }
    }
}
